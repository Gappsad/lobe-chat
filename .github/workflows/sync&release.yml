name: Sync & Release CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

# Ê∑ªÂä†ÊùÉÈôêÈÖçÁΩÆ
permissions:
  contents: write
  pull-requests: write

jobs:
  sync-version:
    name: Sync Upstream Version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name "lobehubbot"
          git config --global user.email "i@lobehub.com"

      - name: Fetch Upstream Version
        id: fetch-upstream
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          upstream_repo="lobehub/lobe-chat"
          current_version=$(jq -r .version package.json)
          latest_release=$(gh release view -R $upstream_repo --json tagName --jq .tagName)
          
          echo "Current local version: $current_version"
          echo "Latest upstream version: $latest_release"
          
          if [[ "$current_version" != "${latest_release#v}" ]]; then
            echo "Version needs to be updated"
            echo "new_version=${latest_release#v}" >> $GITHUB_OUTPUT
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "Version is up-to-date"
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Package Version
        if: steps.fetch-upstream.outputs.update_needed == 'true'
        run: |
          new_version="${{ steps.fetch-upstream.outputs.new_version }}"
          npm version $new_version
          git push origin main
          git push --tags

  release:
    name: Release
    needs: sync-version
    runs-on: ubuntu-latest

    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s  --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ secrets.BUN_VERSION }}

      - name: Install deps
        run: bun i

      - name: Lint
        run: bun run lint

      - name: Test Server Coverage
        run: bun run test-server:coverage
        env:
          DATABASE_TEST_URL: postgresql://postgres:postgres@localhost:5432/postgres
          DATABASE_DRIVER: node
          NEXT_PUBLIC_SERVICE_MODE: server
          KEY_VAULTS_SECRET: LA7n9k3JdEcbSgml2sxfw+4TV1AzaaFU5+R176aQz4s=
          S3_PUBLIC_DOMAIN: https://example.com
          APP_URL: https://home.com

      - name: Test App Coverage
        run: bun run test-app:coverage

      # ÁßªÈô§ NPM ÂèëÂ∏ÉÊ≠•È™§
      - name: Workflow
        run: bun run workflow:readme

      - name: Commit changes
        run: |-
          git diff
          git config --global user.name "lobehubbot"
          git config --global user.email "i@lobehub.com"
          git add .
          git commit -m "üìù docs(bot): Auto sync agents & plugin to readme" || exit 0
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
